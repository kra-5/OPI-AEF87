// üìå –û—Ç–∫—Ä—ã–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
let db;
const request = indexedDB.open("photoGalleryDB", 1);

request.onupgradeneeded = function (event) {
    db = event.target.result;
    if (!db.objectStoreNames.contains("photos")) {
        db.createObjectStore("photos", { keyPath: "id", autoIncrement: true });
    }
};

request.onsuccess = function (event) {
    db = event.target.result;
};

// üìå –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ –≤ IndexedDB
function savePhoto(year, photo) {
    const transaction = db.transaction("photos", "readwrite");
    const store = transaction.objectStore("photos");
    store.add({ year: year, photo: photo });
}

// üìå –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –∏–∑ IndexedDB
function loadPhotos(year, callback) {
    const transaction = db.transaction("photos", "readonly");
    const store = transaction.objectStore("photos");
    const request = store.getAll();

    request.onsuccess = function () {
        const photos = request.result.filter(p => p.year === year).map(p => p.photo);
        callback(photos);
    };
}

// üìå –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–∞–ª–µ—Ä–µ–∏
function showGallery(year) {
    const container = document.getElementById("gallery-container");
    container.innerHTML = `<h2>–§–æ—Ç–æ –∑—É—Å—Ç—Ä—ñ—á—ñ ${year} —Ä–æ–∫—É</h2><div class="gallery"></div>`;

    const galleryDiv = container.querySelector(".gallery");

    loadPhotos(year, function (photos) {
        photos.forEach((src, index) => {
            const img = document.createElement("img");
            img.src = src;
            img.alt = `–§–æ—Ç–æ ${index + 1}`;
            img.onclick = () => addComment(img, year, index);
            galleryDiv.appendChild(img);
        });
    });
}

// üìå –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ (–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ IndexedDB)
function uploadPhoto() {
    const input = document.getElementById("photoUpload");
    if (input.files.length > 0) {
        const file = input.files[0];
        const reader = new FileReader();

        reader.onload = function (e) {
            const selectedYear = prompt("–í–≤–µ–¥—ñ—Ç—å —Ä—ñ–∫ –∑—É—Å—Ç—Ä—ñ—á—ñ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 2024 –∞–±–æ 1982-1987):");
            if (!selectedYear) return;

            savePhoto(selectedYear, e.target.result);
            alert("–§–æ—Ç–æ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–µ!");
            showGallery(selectedYear);
        };

        reader.readAsDataURL(file);
    } else {
        alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å —Ñ–æ—Ç–æ.");
    }
}

// üìå –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
function addComment(img, year, index) {
    const commentBox = document.createElement("div");
    commentBox.classList.add("comment-box");

    const input = document.createElement("input");
    input.type = "text";
    input.placeholder = "–í–∞—à –∫–æ–º–µ–Ω—Ç–∞—Ä...";
    
    const button = document.createElement("button");
    button.innerText = "–î–æ–¥–∞—Ç–∏";
    button.onclick = () => {
        alert(`–ö–æ–º–µ–Ω—Ç–∞—Ä –¥–æ–¥–∞–Ω–æ –¥–æ —Ñ–æ—Ç–æ ${index + 1} (${year} —Ä—ñ–∫): ${input.value}`);
        commentBox.remove();
    };

    commentBox.appendChild(input);
    commentBox.appendChild(button);
    
    img.parentElement.appendChild(commentBox);
}
