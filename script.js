let db;

// üìå –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö IndexedDB
function initDB(callback) {
    const request = indexedDB.open("photoGalleryDB", 1);

    request.onupgradeneeded = function (event) {
        db = event.target.result;
        if (!db.objectStoreNames.contains("photos")) {
            db.createObjectStore("photos", { keyPath: "id", autoIncrement: true });
        }
    };

    request.onsuccess = function (event) {
        db = event.target.result;
        console.log("IndexedDB –≥–æ—Ç–æ–≤–∞!");
        if (callback) callback();
    };

    request.onerror = function (event) {
        console.error("–û—à–∏–±–∫–∞ IndexedDB:", event.target.error);
    };
}

// üìå –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ –≤ IndexedDB
function savePhoto(year, photo, callback) {
    if (!db) return;

    const transaction = db.transaction("photos", "readwrite");
    const store = transaction.objectStore("photos");
    store.add({ year: year, photo: photo, comments: [] });

    transaction.oncomplete = function () {
        console.log(`–§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ ${year}`);
        if (callback) callback();
    };

    transaction.onerror = function (event) {
        console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ:", event.target.error);
    };
}

// üìå –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ –∏–∑ IndexedDB
function loadPhotos(year, callback) {
    if (!db) return;

    const transaction = db.transaction("photos", "readonly");
    const store = transaction.objectStore("photos");
    const request = store.getAll();

    request.onsuccess = function () {
        const photos = request.result.filter(p => p.year === year);
        callback(photos);
    };

    request.onerror = function (event) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ:", event.target.error);
    };
}

// üìå –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–∞–π—Ç–∞ (—á—Ç–æ–±—ã —Ñ–æ—Ç–æ –Ω–µ –∏—Å—á–µ–∑–∞–ª–∏)
function loadPhotosOnStart() {
    if (!db) return;

    const transaction = db.transaction("photos", "readonly");
    const store = transaction.objectStore("photos");
    const request = store.getAll();

    request.onsuccess = function () {
        const photos = request.result;
        if (photos.length > 0) {
            const lastYear = photos[photos.length - 1].year;
            showGallery(lastYear); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –≥–æ–¥
        }
    };
}

// üìå –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–∞–ª–µ—Ä–µ–∏ (–¢–µ–ø–µ—Ä—å —Ñ–æ—Ç–æ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
function showGallery(year) {
    if (!db) {
        console.error("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞");
        return;
    }

    const container = document.getElementById("gallery-container");
    container.innerHTML = `<h2>–§–æ—Ç–æ –∑—É—Å—Ç—Ä—ñ—á—ñ ${year} —Ä–æ–∫—É</h2><div class="gallery"></div>`;

    const galleryDiv = container.querySelector(".gallery");

    loadPhotos(year, function (photos) {
        galleryDiv.innerHTML = "";
        if (photos.length === 0) {
            galleryDiv.innerHTML = "<p>–ù–µ–º–∞—î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏—Ö —Ñ–æ—Ç–æ.</p>";
        }
        photos.forEach((photoData, index) => {
            const img = document.createElement("img");
            img.src = photoData.photo;
            img.alt = `–§–æ—Ç–æ ${index + 1}`;
            img.onclick = () => openModal(photoData, year);
            galleryDiv.appendChild(img);
        });
    });
}

// üìå –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ç–æ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
function openModal(photoData, year) {
    const modal = document.getElementById("photo-modal");
    const modalImg = document.getElementById("modal-img");
    const commentList = document.getElementById("comment-list");
    const commentInput = document.getElementById("comment-input");

    modal.style.display = "block";
    modalImg.src = photoData.photo;

    commentList.innerHTML = "";
    photoData.comments.forEach(comment => {
        const li = document.createElement("li");
        li.textContent = comment;
        commentList.appendChild(li);
    });

    document.getElementById("add-comment-btn").onclick = function () {
        const newComment = commentInput.value.trim();
        if (newComment) {
            photoData.comments.push(newComment);
            savePhoto(year, photoData.photo, () => {
                showGallery(year);
                openModal(photoData, year);
            });
            commentInput.value = "";
        }
    };
}

// üìå –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeModal() {
    document.getElementById("photo-modal").style.display = "none";
}

// üìå –ú–∞—Å—Å–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ
function uploadPhoto() {
    const input = document.getElementById("photoUpload");
    if (input.files.length === 0) {
        alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å —Ñ–æ—Ç–æ.");
        return;
    }

    const selectedYear = prompt("–í–≤–µ–¥—ñ—Ç—å —Ä—ñ–∫ –∑—É—Å—Ç—Ä—ñ—á—ñ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 2024 –∞–±–æ 1982-1987):");
    if (!selectedYear) return;

    let loadedCount = 0;

    for (let i = 0; i < input.files.length; i++) {
        const file = input.files[i];
        const reader = new FileReader();

        reader.onload = function (e) {
            savePhoto(selectedYear, e.target.result, () => {
                loadedCount++;
                if (loadedCount === input.files.length) {
                    alert(`–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${loadedCount} —Ñ–æ—Ç–æ!`);
                    showGallery(selectedYear);
                }
            });
        };

        reader.readAsDataURL(file);
    }
}

// üìå –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Å–ø–∏—Å–∫–∞ –≥–æ–¥–æ–≤
function toggleYears() {
    const extraYears = document.getElementById("extra-years");
    extraYears.style.display = extraYears.style.display === "none" ? "block" : "none";
}

// üìå –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –≥–æ–¥–æ–≤
window.onload = function () {
    initDB(() => {
        const extraYearsDiv = document.getElementById("extra-years");
        for (let year = 1990; year <= new Date().getFullYear(); year++) {
            const button = document.createElement("button");
            button.textContent = year;
            button.onclick = () => showGallery(year);
            extraYearsDiv.appendChild(button);
        }
        loadPhotosOnStart(); // üìå –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Ñ–æ—Ç–æ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∞–π—Ç–∞!
    });
};

// üìå –ó–∞–ø—É—Å–∫–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
initDB();
