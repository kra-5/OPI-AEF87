let db;

// üìå –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö IndexedDB
function initDB(callback) {
    const request = indexedDB.open("photoGalleryDB", 1);

    request.onupgradeneeded = function (event) {
        db = event.target.result;
        if (!db.objectStoreNames.contains("photos")) {
            db.createObjectStore("photos", { keyPath: "id", autoIncrement: true });
        }
    };

    request.onsuccess = function (event) {
        db = event.target.result;
        if (callback) callback();
    };

    request.onerror = function (event) {
        console.error("–û—à–∏–±–∫–∞ IndexedDB:", event.target.error);
    };
}

// üìå –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ –≤ IndexedDB
function savePhoto(year, photo, callback) {
    if (!db) return;

    const transaction = db.transaction("photos", "readwrite");
    const store = transaction.objectStore("photos");
    store.add({ year: year, photo: photo, comments: [] });

    transaction.oncomplete = function () {
        if (callback) callback();
    };
}

// üìå –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ –∏–∑ IndexedDB
function loadPhotos(year, callback) {
    if (!db) return;

    const transaction = db.transaction("photos", "readonly");
    const store = transaction.objectStore("photos");
    const request = store.getAll();

    request.onsuccess = function () {
        const photos = request.result.filter(p => p.year === year);
        callback(photos);
    };
}

// üìå –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–∞–ª–µ—Ä–µ–∏
function showGallery(year) {
    if (!db) return;

    const container = document.getElementById("gallery-container");
    container.innerHTML = `<h2>–§–æ—Ç–æ –∑—É—Å—Ç—Ä—ñ—á—ñ ${year} —Ä–æ–∫—É</h2><div class="gallery"></div>`;

    const galleryDiv = container.querySelector(".gallery");

    loadPhotos(year, function (photos) {
        galleryDiv.innerHTML = "";
        photos.forEach((photoData, index) => {
            const img = document.createElement("img");
            img.src = photoData.photo;
            img.alt = `–§–æ—Ç–æ ${index + 1}`;
            img.onclick = () => openModal(photoData, year);
            galleryDiv.appendChild(img);
        });
    });
}

// üìå –û—Ç–∫—Ä—ã—Ç–∏–µ —Å–ø–∏—Å–∫–∞ –≥–æ–¥–æ–≤
function toggleYears() {
    const extraYears = document.getElementById("extra-years");
    extraYears.style.display = extraYears.style.display === "none" ? "block" : "none";
}

// üìå –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –≥–æ–¥–æ–≤
window.onload = function () {
    const extraYearsDiv = document.getElementById("extra-years");
    for (let year = 1990; year <= new Date().getFullYear(); year++) {
        const button = document.createElement("button");
        button.textContent = year;
        button.onclick = () => showGallery(year);
        extraYearsDiv.appendChild(button);
    }
};

// üìå –ó–∞–ø—É—Å–∫–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
initDB();
